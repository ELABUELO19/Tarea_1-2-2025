services:
  postgres:
    image: postgres:15-alpine
    container_name: yahoo_postgres
    environment:
      POSTGRES_DB: yahoo_answers
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./train.csv:/tmp/train.csv:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d yahoo_answers"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - yahoo_network

  redis:
    image: redis:7-alpine
    container_name: yahoo_redis
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - yahoo_network

  data_loader:
    build: .
    container_name: yahoo_data_loader
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=yahoo_answers
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres123
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
    volumes:
      - ./train.csv:/app/train.csv:ro
    command: ["python", "load_data.py"]
    restart: "no"
    networks:
      - yahoo_network

  analyzer:
    build: .
    container_name: yahoo_analyzer
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      data_loader:
        condition: service_completed_successfully
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=yahoo_answers
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres123
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
    volumes:
      - ./charts:/app/charts
      - ./results:/app/results
    restart: "no"
    networks:
      - yahoo_network
    # CONFIGURACIONES PARA REQUISITO 10K+:
    # --standard: 10,000 consultas (15-25 min) - REQUISITO MÍNIMO ✅
    # --full: 15,000 consultas (25-35 min) - ANÁLISIS COMPLETO
    # --fast: 5,000 consultas (8-15 min) - RÁPIDO (sub-requisito)
    # --cache-only: Solo cache 12K (5-8 min) - VELOCIDAD MÁXIMA
    # --test: 20 consultas (30 seg) - PRUEBA RÁPIDA
    # Sin argumentos: 10,000 por defecto
    command: ["python", "analyzer.py", "--multi-llm"]

volumes:
  postgres_data:
  redis_data:

networks:
  yahoo_network:
    driver: bridge
